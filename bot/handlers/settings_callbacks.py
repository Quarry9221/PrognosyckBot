# bot/handlers/settings_callbacks.py
from aiogram import types
from bot.keyboards import WeatherKeyboards
from db.crud import get_user_settings_summary, get_user_weather_settings
from db.database import get_session
from aiogram.types import CallbackQuery
from bot.logger_config import logger


async def units_settings_callback(call: CallbackQuery):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–¥–∏–Ω–∏—Ü—å –≤–∏–º—ñ—Ä—É"""
    await call.answer()
    async for session in get_session():
        settings = await get_user_weather_settings(session, call.from_user.id)

    current_units = {
        "temperature_unit": settings.temperature_unit,
        "wind_speed_unit": settings.wind_speed_unit,
        "precipitation_unit": settings.precipitation_unit,
        "timeformat": settings.timeformat,
    }

    try:
        await call.message.edit_text(
            "üìè **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–¥–∏–Ω–∏—Ü—å –≤–∏–º—ñ—Ä—É**\n\n–û–±–µ—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∑–º—ñ–Ω–∏:",
            reply_markup=WeatherKeyboards.units_settings(current_units),
            parse_mode="Markdown",
        )
    except Exception as e:
        if "message is not modified" not in str(e):
            raise


async def location_settings_callback(call: CallbackQuery):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó"""
    await call.answer()
    async for session in get_session():
        settings = await get_user_weather_settings(session, call.from_user.id)

    location_info = "‚ùå –õ–æ–∫–∞—Ü—ñ—è –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    if settings.latitude and settings.longitude:
        location_info = (
            f"üìç **–ü–æ—Ç–æ—á–Ω–∞ –ª–æ–∫–∞—Ü—ñ—è:**\n"
            f"{settings.location_name or '–ù–µ–≤—ñ–¥–æ–º–∞ –Ω–∞–∑–≤–∞'}\n"
            f"üåê {settings.latitude:.4f}, {settings.longitude:.4f}\n"
            f"üïê –ß–∞—Å–æ–≤–∏–π –ø–æ—è—Å: {settings.timezone}"
        )

    text = f"üåç **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó**\n\n{location_info}"
    try:
        await call.message.edit_text(
            text,
            reply_markup=WeatherKeyboards.location_settings(),
            parse_mode="Markdown",
        )
    except Exception as e:
        if "message is not modified" not in str(e):
            raise


async def display_settings_callback(call: CallbackQuery):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
    await call.answer()
    async for session in get_session():
        settings = await get_user_weather_settings(session, call.from_user.id)

    display_settings = {
        "show_temperature": settings.show_temperature,
        "show_feels_like": settings.show_feels_like,
        "show_humidity": settings.show_humidity,
        "show_pressure": settings.show_pressure,
        "show_wind": settings.show_wind,
        "show_precipitation": settings.show_precipitation,
        "show_precipitation_probability": settings.show_precipitation_probability,
        "show_cloud_cover": settings.show_cloud_cover,
        "show_uv_index": settings.show_uv_index,
        "show_visibility": settings.show_visibility,
        "show_daily_temperature": settings.show_daily_temperature,
        "show_sunrise_sunset": settings.show_sunrise_sunset,
        "show_daylight_duration": settings.show_daylight_duration,
    }

    try:
        await call.message.edit_text(
            "üìä **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è**\n\n–í–∏–±–µ—Ä–∏, —â–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –≤ –ø—Ä–æ–≥–Ω–æ–∑—ñ –ø–æ–≥–æ–¥–∏:",
            reply_markup=WeatherKeyboards.display_settings(display_settings),
            parse_mode="Markdown",
        )
    except Exception as e:
        if "message is not modified" not in str(e):
            raise


async def settings_summary_callback(call: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"""
    await call.answer()

    async for session in get_session():
        summary = await get_user_settings_summary(session, call.from_user.id)

    await call.message.edit_text(
        summary,
        reply_markup=WeatherKeyboards.back_button("menu:settings"),
        parse_mode="Markdown",
    )


async def edit_notifications_display_callback(call: CallbackQuery):
    """–í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å"""
    await call.answer()
    async for session in get_session():
        settings = await get_user_weather_settings(session, call.from_user.id)
    display_settings = {
        "show_temperature": settings.show_temperature,
        "show_feels_like": settings.show_feels_like,
        "show_humidity": settings.show_humidity,
        "show_pressure": settings.show_pressure,
        "show_wind": settings.show_wind,
        "show_precipitation": settings.show_precipitation,
        "show_precipitation_probability": settings.show_precipitation_probability,
        "show_cloud_cover": settings.show_cloud_cover,
        "show_uv_index": settings.show_uv_index,
        "show_visibility": settings.show_visibility,
        "show_daily_temperature": settings.show_daily_temperature,
        "show_sunrise_sunset": settings.show_sunrise_sunset,
        "show_daylight_duration": settings.show_daylight_duration,
    }
    await call.message.edit_text(
        "üìä **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å**\n\n–í–∏–±–µ—Ä–∏, —â–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö:",
        reply_markup=WeatherKeyboards.display_settings(display_settings),
        parse_mode="Markdown",
    )
