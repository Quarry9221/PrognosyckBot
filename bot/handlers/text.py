from bot.handlers.utils import format_weather_response
from bot.logger_config import logger
from aiogram.types import Message
from bot.keyboards import WeatherKeyboards
from db.crud import update_user_location, save_user_message, get_api_parameters
from db.database import get_session
from services.weather import get_weather
from services.geocode import geocode_place


async def text_handler(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–ø–æ—à—É–∫ –ø–æ–≥–æ–¥–∏)"""
    place = message.text.strip()
    logger.info(f"–ó–∞–ø–∏—Ç –ø–æ–≥–æ–¥–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id}: '{place}'")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä—É
    await message.bot.send_chat_action(message.chat.id, "typing")
    
    try:
        # –ì–µ–æ–∫–æ–¥—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó
        location_data = await geocode_place(place)
        lat = location_data["lat"]
        lon = location_data["lon"]
        city = location_data.get("city", "")
        country = location_data.get("country", "")
        
        logger.info(f"–ì–µ–æ–∫–æ–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ–π—à–ª–æ —É—Å–ø—ñ—à–Ω–æ –¥–ª—è {message.from_user.id}: {lat}, {lon} ({city}, {country})")
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        async for session in get_session():
            await update_user_location(
                session, 
                message.from_user.id, 
                lat, lon, 
                location_name=f"{city}, {country}" if city and country else place
            )
            logger.info(f"–û–Ω–æ–≤–ª–µ–Ω–æ –ª–æ–∫–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id}")
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ API
            api_params = await get_api_parameters(session, message.from_user.id)
            logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ API –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id}")
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await save_user_message(
                session,
                message.from_user.id,
                message.chat.id,
                place,
                location_requested=place,
                latitude=lat,
                longitude=lon
            )
            logger.info(f"–ó–±–µ—Ä–µ–∂–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id}: '{place}'")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É
        weather_data = await get_weather(lat, lon, api_params)
        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id}")
        
        # –§–æ—Ä–º–∞—Ç—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        response = await format_weather_response(weather_data, location_data, api_params)
        
        await message.reply(
            response,
            reply_markup=WeatherKeyboards.weather_type_menu(),
            parse_mode="Markdown"
        )
        
        logger.info(f"–£—Å–ø—ñ—à–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id} –¥–ª—è '{place}'")
        
    except ValueError as e:
        error_msg = (
            f"‚ùå **–ü–æ–º–∏–ª–∫–∞:** {str(e)}\n\n"
            "üí° **–°–ø—Ä–æ–±—É–π:**\n"
            "‚Ä¢ –í–∫–∞–∑–∞—Ç–∏ –º—ñ—Å—Ç–æ —Ç–∞ –∫—Ä–∞—ó–Ω—É\n"
            "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É –Ω–∞–∑–≤—É\n"
            "‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–∞–≤–æ–ø–∏—Å"
        )
        await message.reply(error_msg, parse_mode="Markdown")
        logger.warning(f"–ü–æ–º–∏–ª–∫–∞ –≥–µ–æ–∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è {message.from_user.id}: {str(e)}")
        
    except Exception as e:
        await message.reply(
            "‚ùå –í–∏–Ω–∏–∫–ª–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω–∏—Å—å –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.",
            reply_markup=WeatherKeyboards.main_menu()
        )
        logger.error(f"–ù–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –¥–ª—è {message.from_user.id}: {str(e)}", exc_info=True)
