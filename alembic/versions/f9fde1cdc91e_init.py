"""init

Revision ID: f9fde1cdc91e
Revises: 
Create Date: 2025-09-28 16:11:56.628655

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9fde1cdc91e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=True),
    sa.Column('chat_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_chats_chat_id'), 'bot_chats', ['chat_id'], unique=True)
    op.create_index(op.f('ix_bot_chats_id'), 'bot_chats', ['id'], unique=False)
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('language_code', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('user_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('location_requested', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('weather_response', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_messages_id'), 'user_messages', ['id'], unique=False)
    op.create_table('user_weather_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('elevation', sa.Float(), nullable=True),
    sa.Column('timezone', sa.String(length=100), nullable=True),
    sa.Column('temperature_unit', sa.String(length=20), nullable=True),
    sa.Column('wind_speed_unit', sa.String(length=10), nullable=True),
    sa.Column('precipitation_unit', sa.String(length=10), nullable=True),
    sa.Column('timeformat', sa.String(length=20), nullable=True),
    sa.Column('forecast_days', sa.Integer(), nullable=True),
    sa.Column('past_days', sa.Integer(), nullable=True),
    sa.Column('show_temperature', sa.Boolean(), nullable=True),
    sa.Column('show_feels_like', sa.Boolean(), nullable=True),
    sa.Column('show_humidity', sa.Boolean(), nullable=True),
    sa.Column('show_pressure', sa.Boolean(), nullable=True),
    sa.Column('show_wind', sa.Boolean(), nullable=True),
    sa.Column('show_precipitation', sa.Boolean(), nullable=True),
    sa.Column('show_precipitation_probability', sa.Boolean(), nullable=True),
    sa.Column('show_cloud_cover', sa.Boolean(), nullable=True),
    sa.Column('show_uv_index', sa.Boolean(), nullable=True),
    sa.Column('show_visibility', sa.Boolean(), nullable=True),
    sa.Column('show_dew_point', sa.Boolean(), nullable=True),
    sa.Column('show_solar_radiation', sa.Boolean(), nullable=True),
    sa.Column('show_daily_temperature', sa.Boolean(), nullable=True),
    sa.Column('show_daily_precipitation', sa.Boolean(), nullable=True),
    sa.Column('show_daily_wind', sa.Boolean(), nullable=True),
    sa.Column('show_sunrise_sunset', sa.Boolean(), nullable=True),
    sa.Column('show_daylight_duration', sa.Boolean(), nullable=True),
    sa.Column('show_sunshine_duration', sa.Boolean(), nullable=True),
    sa.Column('show_daily_uv', sa.Boolean(), nullable=True),
    sa.Column('show_current_weather', sa.Boolean(), nullable=True),
    sa.Column('notification_enabled', sa.Boolean(), nullable=True),
    sa.Column('notification_time', sa.String(length=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_weather_settings_id'), 'user_weather_settings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_weather_settings_id'), table_name='user_weather_settings')
    op.drop_table('user_weather_settings')
    op.drop_index(op.f('ix_user_messages_id'), table_name='user_messages')
    op.drop_table('user_messages')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_bot_chats_id'), table_name='bot_chats')
    op.drop_index(op.f('ix_bot_chats_chat_id'), table_name='bot_chats')
    op.drop_table('bot_chats')
    # ### end Alembic commands ###
